
services:
  todo-app:
    build: .
    container_name: todo-app-secure
    
    # コンテナ起動時に権限を修正してからアプリケーションを起動
    command: >
      sh -c "
        chmod 644 /app/ssl/private.key 2>/dev/null || true &&
        chmod 644 /app/ssl/cert.pem 2>/dev/null || true &&
        npm start
      "
    
    # ポート設定 - HTTPとHTTPS
    ports:
      - "3000:3000"
      - "3443:3443"
    
    # ボリューム設定（bind mount + named volume の組み合わせ）
    volumes:
      - todo-data:/app/data:rw
      - ./docker-data/ssl:/app/ssl:rw  # SSL証明書はbind mount
      - /etc/localtime:/etc/localtime:ro  # タイムゾーン設定
    
    # セキュリティ関連の環境変数
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HTTPS_PORT=3443
      - BEARER_TOKEN=${BEARER_TOKEN:-your-secret-token}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3000,https://localhost:3443}
      - ENABLE_HTTPS_REDIRECT=${ENABLE_HTTPS_REDIRECT:-false}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - AUTH_RATE_LIMIT_MAX=${AUTH_RATE_LIMIT_MAX:-5}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    
    # セキュリティ制約
    security_opt:
      - no-new-privileges:true  # 新しい権限の取得を禁止
    
    # リソース制限
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # ネットワーク設定
    networks:
      - todo-network
    
    # ヘルスチェック
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 3000, path: '/', method: 'HEAD' }; const req = http.request(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 再起動ポリシー
    restart: unless-stopped
    
    # tmpfs設定
    tmpfs:
      - /tmp:rw,noexec,nosuid,size=100m
    
    # ログ設定
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # 追加のセキュリティ設定
    cap_drop:
      - ALL  # すべてのLinux capabilitiesを削除
    cap_add:
      - CHOWN      # ファイル所有権変更（ログファイル用）
      - SETGID     # グループID変更
      - SETUID     # ユーザーID変更
      - NET_BIND_SERVICE  # 1024以下のポートでもバインド可能
    
    # ユーザー設定
    user: "1001:1001"  # 非rootユーザー

# セキュアなネットワーク設定
networks:
  todo-network:
    driver: bridge

# 簡単なボリューム設定
volumes:
  todo-data:
    driver: local